var cov_2owqfqd8bx=function(){var path='/Users/bdougie/code/invite-contributors-master/index.js',hash='8eb84baf624df0caa72596d0ca5a4375d1582484',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/bdougie/code/invite-contributors-master/index.js',statementMap:{'0':{start:{line:1,column:0},end:{line:107,column:1}},'1':{start:{line:2,column:2},end:{line:2,column:47}},'2':{start:{line:5,column:19},end:{line:5,column:68}},'3':{start:{line:6,column:21},end:{line:6,column:56}},'4':{start:{line:7,column:18},end:{line:7,column:74}},'5':{start:{line:10,column:4},end:{line:12,column:5}},'6':{start:{line:11,column:6},end:{line:11,column:12}},'7':{start:{line:16,column:4},end:{line:22,column:5}},'8':{start:{line:18,column:6},end:{line:18,column:64}},'9':{start:{line:19,column:6},end:{line:19,column:100}},'10':{start:{line:24,column:4},end:{line:30,column:5}},'11':{start:{line:25,column:6},end:{line:25,column:60}},'12':{start:{line:26,column:11},end:{line:30,column:5}},'13':{start:{line:27,column:6},end:{line:27,column:41}},'14':{start:{line:29,column:6},end:{line:29,column:32}},'15':{start:{line:35,column:18},end:{line:35,column:71}},'16':{start:{line:36,column:17},end:{line:36,column:76}},'17':{start:{line:36,column:33},end:{line:36,column:75}},'18':{start:{line:37,column:4},end:{line:37,column:26}},'19':{start:{line:41,column:20},end:{line:45,column:5}},'20':{start:{line:49,column:4},end:{line:57,column:5}},'21':{start:{line:50,column:6},end:{line:50,column:57}},'22':{start:{line:51,column:6},end:{line:51,column:105}},'23':{start:{line:52,column:6},end:{line:52,column:12}},'24':{start:{line:55,column:6},end:{line:55,column:57}},'25':{start:{line:56,column:6},end:{line:56,column:74}},'26':{start:{line:61,column:23},end:{line:65,column:5}},'27':{start:{line:66,column:24},end:{line:70,column:5}},'28':{start:{line:74,column:4},end:{line:82,column:5}},'29':{start:{line:75,column:6},end:{line:75,column:60}},'30':{start:{line:76,column:6},end:{line:76,column:138}},'31':{start:{line:77,column:6},end:{line:77,column:12}},'32':{start:{line:80,column:6},end:{line:80,column:62}},'33':{start:{line:81,column:6},end:{line:81,column:107}},'34':{start:{line:86,column:23},end:{line:90,column:5}},'35':{start:{line:91,column:24},end:{line:95,column:5}},'36':{start:{line:97,column:4},end:{line:105,column:5}},'37':{start:{line:98,column:6},end:{line:98,column:60}},'38':{start:{line:99,column:6},end:{line:99,column:132}},'39':{start:{line:100,column:6},end:{line:100,column:12}},'40':{start:{line:103,column:6},end:{line:103,column:61}},'41':{start:{line:104,column:6},end:{line:104,column:83}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:1,column:17},end:{line:1,column:18}},loc:{start:{line:1,column:28},end:{line:107,column:1}},line:1},'1':{name:'inviteMember',decl:{start:{line:4,column:17},end:{line:4,column:29}},loc:{start:{line:4,column:40},end:{line:31,column:3}},line:4},'2':{name:'findTeamId',decl:{start:{line:33,column:17},end:{line:33,column:27}},loc:{start:{line:33,column:53},end:{line:38,column:3}},line:33},'3':{name:'(anonymous_3)',decl:{start:{line:36,column:28},end:{line:36,column:29}},loc:{start:{line:36,column:33},end:{line:36,column:75}},line:36},'4':{name:'inviteToOrg',decl:{start:{line:40,column:17},end:{line:40,column:28}},loc:{start:{line:40,column:39},end:{line:58,column:3}},line:40},'5':{name:'inviteToTeam',decl:{start:{line:60,column:17},end:{line:60,column:29}},loc:{start:{line:60,column:48},end:{line:83,column:3}},line:60},'6':{name:'inviteOutsideCollaboratorToRepo',decl:{start:{line:85,column:17},end:{line:85,column:48}},loc:{start:{line:85,column:59},end:{line:106,column:3}},line:85}},branchMap:{'0':{loc:{start:{line:10,column:4},end:{line:12,column:5}},type:'if',locations:[{start:{line:10,column:4},end:{line:12,column:5}},{start:{line:10,column:4},end:{line:12,column:5}}],line:10},'1':{loc:{start:{line:10,column:8},end:{line:10,column:38}},type:'binary-expr',locations:[{start:{line:10,column:8},end:{line:10,column:15}},{start:{line:10,column:19},end:{line:10,column:28}},{start:{line:10,column:32},end:{line:10,column:38}}],line:10},'2':{loc:{start:{line:24,column:4},end:{line:30,column:5}},type:'if',locations:[{start:{line:24,column:4},end:{line:30,column:5}},{start:{line:24,column:4},end:{line:30,column:5}}],line:24},'3':{loc:{start:{line:24,column:8},end:{line:24,column:34}},type:'binary-expr',locations:[{start:{line:24,column:8},end:{line:24,column:14}},{start:{line:24,column:18},end:{line:24,column:34}}],line:24},'4':{loc:{start:{line:26,column:11},end:{line:30,column:5}},type:'if',locations:[{start:{line:26,column:11},end:{line:30,column:5}},{start:{line:26,column:11},end:{line:30,column:5}}],line:26},'5':{loc:{start:{line:26,column:15},end:{line:26,column:38}},type:'binary-expr',locations:[{start:{line:26,column:15},end:{line:26,column:21}},{start:{line:26,column:25},end:{line:26,column:38}}],line:26},'6':{loc:{start:{line:36,column:33},end:{line:36,column:75}},type:'binary-expr',locations:[{start:{line:36,column:33},end:{line:36,column:52}},{start:{line:36,column:56},end:{line:36,column:75}}],line:36},'7':{loc:{start:{line:37,column:11},end:{line:37,column:26}},type:'binary-expr',locations:[{start:{line:37,column:11},end:{line:37,column:15}},{start:{line:37,column:19},end:{line:37,column:26}}],line:37}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0},b:{'0':[0,0],'1':[0,0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_2owqfqd8bx.s[0]++;module.exports=robot=>{cov_2owqfqd8bx.f[0]++;cov_2owqfqd8bx.s[1]++;robot.on('pull_request.closed',inviteMember);async function inviteMember(context){cov_2owqfqd8bx.f[1]++;const isUser=(cov_2owqfqd8bx.s[2]++,context.payload.pull_request.user.type==='User');const isMerged=(cov_2owqfqd8bx.s[3]++,context.payload.pull_request.merged);const isOrg=(cov_2owqfqd8bx.s[4]++,context.payload.repository.owner.type==='Organization');// Terminate if we can't invite user to organization
cov_2owqfqd8bx.s[5]++;if((cov_2owqfqd8bx.b[1][0]++,!isUser)||(cov_2owqfqd8bx.b[1][1]++,!isMerged)||(cov_2owqfqd8bx.b[1][2]++,!isOrg)){cov_2owqfqd8bx.b[0][0]++;cov_2owqfqd8bx.s[6]++;return;}else{cov_2owqfqd8bx.b[0][1]++;}// Get user settings
let config;cov_2owqfqd8bx.s[7]++;try{cov_2owqfqd8bx.s[8]++;// attempt to find teamId if team exists
config=await context.config('invite-contributors.yml');cov_2owqfqd8bx.s[9]++;config.teamId=await findTeamId(context,context.payload.repository.owner.login,config.team);}catch(e){}// no config detected or teamId not found
// Invite to team. If no team defined, invite to organization.
cov_2owqfqd8bx.s[10]++;if((cov_2owqfqd8bx.b[3][0]++,config)&&(cov_2owqfqd8bx.b[3][1]++,config.isOutside)){cov_2owqfqd8bx.b[2][0]++;cov_2owqfqd8bx.s[11]++;await inviteOutsideCollaboratorToRepo(context,config);}else{cov_2owqfqd8bx.b[2][1]++;cov_2owqfqd8bx.s[12]++;if((cov_2owqfqd8bx.b[5][0]++,config)&&(cov_2owqfqd8bx.b[5][1]++,config.teamId)){cov_2owqfqd8bx.b[4][0]++;cov_2owqfqd8bx.s[13]++;await inviteToTeam(context,config);}else{cov_2owqfqd8bx.b[4][1]++;cov_2owqfqd8bx.s[14]++;await inviteToOrg(context);}}}async function findTeamId(context,org,teamName){cov_2owqfqd8bx.f[2]++;// get all pages from paginated api call and flatten data
const teams=(cov_2owqfqd8bx.s[15]++,(await context.github.orgs.getTeams({org:org})).data);const team=(cov_2owqfqd8bx.s[16]++,teams.find(t=>{cov_2owqfqd8bx.f[3]++;cov_2owqfqd8bx.s[17]++;return(cov_2owqfqd8bx.b[6][0]++,t.name===teamName)||(cov_2owqfqd8bx.b[6][1]++,t.slug===teamName);}));cov_2owqfqd8bx.s[18]++;return(cov_2owqfqd8bx.b[7][0]++,team)&&(cov_2owqfqd8bx.b[7][1]++,team.id);}async function inviteToOrg(context){cov_2owqfqd8bx.f[4]++;const payload=(cov_2owqfqd8bx.s[19]++,{org:context.payload.repository.owner.login,username:context.payload.pull_request.user.login,role:'member'// check if user is already part of organization
// the api call throws if user is not part of org
});cov_2owqfqd8bx.s[20]++;try{cov_2owqfqd8bx.s[21]++;await context.github.orgs.getOrgMembership(payload);cov_2owqfqd8bx.s[22]++;robot.log(`Cannot invite ${payload.username} because they already been invited to ${payload.org}!`);cov_2owqfqd8bx.s[23]++;return;}catch(e){cov_2owqfqd8bx.s[24]++;// if user is not part of org, invite them
await context.github.orgs.addOrgMembership(payload);cov_2owqfqd8bx.s[25]++;robot.log(`${payload.username} has been invited to ${payload.org}!`);}}async function inviteToTeam(context,config){cov_2owqfqd8bx.f[5]++;const orgPayload=(cov_2owqfqd8bx.s[26]++,{org:context.payload.repository.owner.login,username:context.payload.pull_request.user.login,role:'member'});const teamPayload=(cov_2owqfqd8bx.s[27]++,{id:config.teamId,username:context.payload.pull_request.user.login,role:'member'// check if user is already part of team
// the api call throws if user is not part of team
});cov_2owqfqd8bx.s[28]++;try{cov_2owqfqd8bx.s[29]++;await context.github.orgs.getOrgMembership(orgPayload);cov_2owqfqd8bx.s[30]++;robot.log(`Cannot invite ${orgPayload.username} to team #${teamPayload.id} because they already been invited to ${orgPayload.org}!`);cov_2owqfqd8bx.s[31]++;return;}catch(e){cov_2owqfqd8bx.s[32]++;// if user is not part of org, invite them
await context.github.orgs.addTeamMembership(teamPayload);cov_2owqfqd8bx.s[33]++;robot.log(`${teamPayload.username} has been invited to team#${teamPayload.id} in ${orgPayload.org}!`);}}async function inviteOutsideCollaboratorToRepo(context){cov_2owqfqd8bx.f[6]++;const orgPayload=(cov_2owqfqd8bx.s[34]++,{org:context.payload.repository.owner.login,username:context.payload.pull_request.user.login,role:'member'});const repoPayload=(cov_2owqfqd8bx.s[35]++,{owner:context.payload.repository.owner.login,repo:context.payload.repository.name,username:context.payload.pull_request.user.login});cov_2owqfqd8bx.s[36]++;try{cov_2owqfqd8bx.s[37]++;await context.github.orgs.getOrgMembership(orgPayload);cov_2owqfqd8bx.s[38]++;robot.log(`Cannot add ${orgPayload.username} as outside collaborator because they already been invited to ${orgPayload.org}!`);cov_2owqfqd8bx.s[39]++;return;}catch(e){cov_2owqfqd8bx.s[40]++;// if user is not part of org, invite them
await context.github.repos.addCollaborator(repoPayload);cov_2owqfqd8bx.s[41]++;robot.log(`${repoPayload.username} has been invited to ${repoPayload.repo}!`);}}};